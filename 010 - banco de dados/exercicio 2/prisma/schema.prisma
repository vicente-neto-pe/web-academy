model cliente {
  cpf             String     @unique @db.VarChar(11)
  email           String     @unique @db.VarChar(45)
  numero_celular  String     @db.VarChar(15)
  nome            String     @db.VarChar(100)
  data_nascimento DateTime  @db.Date
  endereco        endereco[]
  compra          compra[]
}

model categoria {
  id                Int                 @id @default(autoincrement())
  nome              String              @db.VarChar(45)
  categoriaPaiId    Int?                @map("categoria_pai_id")
  categoriaPai      categoria?          @relation("categoriaPaiFilhos", fields: [categoriaPaiId], references: [id])
  subcategorias     categoria[]         @relation("categoriaPaiFilhos")
  produto_categoria produto_categoria[]
}

model produto {
  id                      Int                       @id @default(autoincrement())
  nome                    String                    @db.VarChar(100)
  preco                   Float
  fabricante              String?                    @db.VarChar(45)
  descricao               String                    @db.VarChar(255)
  estoque                 Int                       @default(0)
  produto_categoria       produto_categoria[]
  modelo                  modelo[]
  produto_modelo_nr_serie produto_modelo_nr_serie[]
}

model endereco {
  id          Int      @id @default(autoincrement())
  pais        String   @db.VarChar(45)
  estado      String   @db.VarChar(45)
  cidade      String   @db.VarChar(45)
  cep         String   @db.VarChar(8)
  rua         String   @db.VarChar(100)
  numero      Int
  cliente     cliente  @relation(fields: [cliente_cpf], references: [cpf])
  cliente_cpf String
  compra      compra[]
}

model compra {
  id                      Int                       @id @default(autoincrement())
  forma_pagamento         String                    @db.VarChar(45)
  data_hora               DateTime                  @db.DateTime
  desconto                Float
  cliente                 cliente                   @relation(fields: [cliente_cpf], references: [cpf])
  cliente_cpf             String
  endereco                endereco                  @relation(fields: [endereco_id], references: [id])
  endereco_id             Int
  produto_modelo_nr_serie produto_modelo_nr_serie[]
}

model produto_categoria {
  produto_id   Int
  categoria_id Int
  produto      produto   @relation(fields: [produto_id], references: [id])
  categoria    categoria @relation(fields: [categoria_id], references: [id])

  @@id([produto_id, categoria_id])
}

model modelo {
  id                      Int                       @id @default(autoincrement())
  nome                    String                    @db.VarChar(45)
  produto                 produto                   @relation(fields: [produto_id], references: [id])
  produto_id              Int
  nr_series               nr_serie[]
  produto_modelo_nr_serie produto_modelo_nr_serie[]
}

model nr_serie {
  codigo                  String                    @unique @db.VarChar(100)
  modelo                  modelo                    @relation(fields: [modelo_id], references: [id])
  modelo_id               Int
  produto_modelo_nr_serie produto_modelo_nr_serie[]
}

model produto_modelo_nr_serie {
  id  Int       @id @default(autoincrement())
  produto_id      Int
  modelo_id       Int
  compra_id       Int
  nr_serie_codigo String?
  produto         produto   @relation(fields: [produto_id], references: [id])
  modelo          modelo    @relation(fields: [modelo_id], references: [id])
  nr_serie        nr_serie? @relation(fields: [nr_serie_codigo], references: [codigo])
  compra          compra    @relation(fields: [compra_id], references: [id])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
